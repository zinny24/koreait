1. 서버 프로그램 구현
1) 단위 테스트 도구 : CppUnit, JUnit, HttpUnit
2) 일반적으로 사용되는 시스템 환경은 프로그램 개발을 위한 개발환경, 테스트를 위한 테스트 환경, 실제 시스템이 운영되는 운영환경과 백업환경 등으로 분류할 수 있다.
3) 목표 시스템의 개발 시간 및 비용 절감을 위하여 검증된 기능을 파악하고 재구성하여 시스템에  응용하기 위한 최적화 작업에는 함수와 객체 재사용, 애플리케이션 재사용, 컴포넌트 재사용이 있다.
4) 개발을 위해 사용되는 소프트웨어의 종류에는 구현 도구, 테스트 도구, 형상관리 도구가 있다.
5) 목표 시스템 구축을 위한 통합 개발환경의 선정은 풍부한 기능과 Plug-in을 보유하고 있고, 다양한 적용 사례가 존재하는 통합 개발 도구(IDE: Integrated Development Environment)를 개발 도구로 선정한다.
6)테스트 케이스란 요구 사항을 준수하는지 검증하기 위하여 테스트 조건, 입력값, 예상출력값 및 수행한 결과 등 테스트 조건을 명세한 것이다
7) 응집도
기능적 응집도 - 모듈 내부의 모든 기능이 단일한 목적을 위해 수행되는 경우이다.
기능적 응집도 - 모듈 내부의 각 구성 요소들이 연관이 없을 경우이다.
절차적 응집도 - 모듈이 다수의 관련 기능을 가질 때 모듈 안의 구성 요소들이 그 기능을 순차적으로 수행할 경우이다.
순차적 응집도 - 모듈 내에서 한 활동으로부터 나온 출력값을 다른 활동의 입력값으로 사용하는 경우이다.

2. 통합 구현

1) 통합 구현은 사용자의 요구 사항을 해결하고, 새로운 서비스 창출을 위해 단위 기능을 하는 모듈간의  연계와 통합을 말한다.
2) 상위 모듈의 역할을 하는 가상의 모듈을 테스트 드라이버(test driver)라고 한다.
3) 송신 시스템에서 수신 시스템으로 전송되는 연계 데이터는 보안에 취약할 수 있으므로 데이터의 중요성을 고려하여 보안을 적용해야 한다. 일반적으로 연계 데이터 보안 방식에는 전송 구간 보안과 데이터 보안 2가지 방식이 있다.
4) 소프트웨어의 개발과정에서 소프트웨어의 변경사항을 관리하기 위해 개발된 일련의 활동을 뜻하는 것을 형상관리라고 한다.
5) 선형 검색은 처음부터 끝까지 하나씩 순서대로 비교하며 원하는 값을 찾아내는 검색을 말한다.
6) OWASP(The Open Web Application Security Project)는 오픈소스 웹 애플리케이션 보안 프로젝트는 웹에 관한 정보노출, 악성 파일 및 스크립트, 보안 취약점 등을 연구하는 단체이다.